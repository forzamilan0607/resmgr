<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chris.modules.res.dao.ResEquipParamDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.chris.modules.res.entity.ResEquipParamEntity" id="resEquipParamMap">
        <result property="id" column="id"/>
        <result property="resId" column="res_id"/>
        <result property="name" column="name"/>
        <result property="value" column="value"/>
        <result property="dictId" column="dict_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.chris.modules.res.entity.ResEquipParamEntity">
		select * from t_res_equip_param where id = #{value}
	</select>

	<select id="queryList" resultType="com.chris.modules.res.entity.ResEquipParamEntity" >
		select * from t_res_equip_param where 1=1
		<if test="id != null ">
			AND id = ${id}
		</if>
		<if test="resId != null ">
			AND res_id = ${resId}
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_res_equip_param 
	</select>
	 
	<insert id="save" parameterType="com.chris.modules.res.entity.ResEquipParamEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_res_equip_param
		(
			`res_id`, 
			`name`,
			`value`, 
			`dict_id`, 
			`create_time`, 
			`update_time`
		)
		values
		(
			#{resId}, 
			#{name},
			#{value}, 
			#{dictId}, 
			#{createTime}, 
			#{updateTime}
		)
	</insert>

	<insert id="save2His" parameterType="java.lang.Long" >
		insert into t_res_equip_param_his
		(
			`id`,
			`res_id`,
			`name`,
			`value`,
			`dict_id`,
			`create_time`,
			`update_time`,
			`delete_time`
		)
		SELECT
			`id`,
			`res_id`,
			`name`,
			`value`,
			`dict_id`,
			`create_time`,
			`update_time`,
			now()
		FROM t_res_equip_param
		WHERE res_id = #{resId}
	</insert>

	<insert id="saveBatch" parameterType="java.util.List" useGeneratedKeys="true">
		<selectKey resultType="long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into t_res_equip_param
		(
			`res_id`,
			`name`,
			`value`,
			`dict_id`,
			`create_time`,
			`update_time`
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">
		  (
			#{item.resId},
			#{item.name},
			#{item.value},
			#{item.dictId},
			now(),
			now()
		  )
		</foreach>
	</insert>
	 
	<update id="update" parameterType="com.chris.modules.res.entity.ResEquipParamEntity">
		update t_res_equip_param 
		<set>
			<if test="resId != null">`res_id` = #{resId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="value != null">`value` = #{value}, </if>
			<if test="dictId != null">`dict_id` = #{dictId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			`update_time` = now()
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_res_equip_param where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_res_equip_param where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteByResId" parameterType="java.lang.Long">
		delete from t_res_equip_param where res_id = #{resId}
	</delete>

</mapper>